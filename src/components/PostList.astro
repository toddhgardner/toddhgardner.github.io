---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";
import YouTubeVideo from "./YouTubeVideo.astro";

interface Props {
  limit?: number
  page?: boolean
}

const {
  limit = 20,
  // page = true
} = Astro.props;

const posts = (await getCollection("blog"))
  .sort(
    (a, b) => b.data.publishedOn.valueOf() - a.data.publishedOn.valueOf(),
  )
  .slice(0, limit);
---
<style>
  ul.post-list {
    &, &>li {
      list-style: none;
    }
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;

    article {
      display: flex;
      flex-direction: column;
      gap: 16px;
      &>* {
        margin: 0;
        padding: 0;
      }
    }
    h3 a {
      text-decoration: none;
      color: unset;
    }
  }
</style>

<ul class="post-list">
  {posts.map((post) => (
    <li>
      <article>
        {post.data.video && (
          <YouTubeVideo videoId={post.data.video.id} videoTitle={post.data.title} />
        )}
        {!post.data.video && post.data.image && (
          <Picture
            src={post.data.image}
            alt={post.data.title}
            formats={ ["webp"] }
          />
        )}
        <h3>
          <a href={`/blog/${post.slug}`} title={post.data.title}>
            {post.data.title}
          </a>
        </h3>
        <div>
          <time datetime={post.data.publishedOn.toISOString()}
              data-tooltip={post.data.publishedOn.toLocaleString()}>
            {post.data.publishedOn.toISOString()}
          </time>
        </div>
        <div class="post-description">
          {post.data.description}
        </div>
        <a href={`/blog/${post.slug}`} title={post.data.title}>
          Read more &gt;&gt;
        </a>
      </article>
    </li>
  ))
}
</ul>

<script>
  import { DateTime } from "luxon";

  /**
   * Transform the absolute ISO timestamps on blog posts into relative timestamps.
   * This executes client-side so that it is always current to the visitors time.
   */
  (function relativeTime() {
    const timeElements = document.querySelectorAll(".post-list time[datetime]");

    for (const time of timeElements) {
      const datetime = time.getAttribute("datetime");
      if (datetime) {
        const dt = DateTime.fromISO(datetime);
        const relative = dt.toRelative({ style: "narrow" });
        time.textContent = relative;
      }
    }
  })();
</script>