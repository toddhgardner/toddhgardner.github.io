---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";
import YouTubeVideo from "./YouTubeVideo.astro";

interface Props {
  limit?: number
  page?: boolean
}

const {
  limit = 20,
  // page = true
} = Astro.props;

const posts = (await getCollection("blog"))
  .sort(
    (a, b) => b.data.publishedOn.valueOf() - a.data.publishedOn.valueOf(),
  )
  .slice(0, limit);
---

<ul class="unlist flex-column flex-gap-16">
  {posts.map((post) => (
    <li>
      <article class="flex-column flex-gap-16">
        {post.data.video && (
          <YouTubeVideo videoId={post.data.video.id} videoTitle={post.data.title} />
        )}
        {!post.data.video && post.data.image && (
          <Picture
            src={post.data.image}
            alt={post.data.title}
            formats={["webp"]}
          />
        )}
        <h3>
          <a href={new URL(`/blog/${post.slug}`, Astro.url.origin)} class="unlink">
            {post.data.title}
          </a>
        </h3>
        <div>
          <time datetime={post.data.publishedOn.toISOString()} to-rel
              data-tooltip={post.data.publishedOn.toLocaleString()}>
            {post.data.publishedOn.toLocaleDateString()}
          </time>
        </div>
        <div class="post-description">
          {post.data.description}
        </div>
        <a href={new URL(`/blog/${post.slug}`, Astro.url.origin)}>
          Read more &gt;&gt;
        </a>
      </article>
    </li>
  ))
}
</ul>

