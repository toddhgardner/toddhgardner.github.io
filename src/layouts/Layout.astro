---
import BaseHead from "~/components/BaseHead.astro";
import Header from "~/components/Header.astro";
import Footer from "~/components/Footer.astro";
import PostHog from "~/components/PostHog.astro";
import shareImage from "~/images/share.png";
import { AUTHOR_NAME } from "~/consts";

interface Props {
  title: string;
  description: string;
  image?: ImageMetadata
}

const {
  title,
  description,
  image = shareImage
} = Astro.props as Props;

const url = new URL(Astro.url.pathname.replace(".html", ""), Astro.url.origin);

---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={title}
      description={description}
      canonical={url} />

    <slot name="head" />
    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:site_name" content={AUTHOR_NAME} />
    <meta property="og:url" content={url} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content="en_US">
    <meta property="og:image" content={new URL(image.src, Astro.url.origin)} />
    <slot name="og" />
    <!-- Structured Data -->
    <slot name="structured-data" />
  </head>
  <body>
    <Header />

    <main class="container">
      <slot />
    </main>

    <Footer />
    <PostHog />
    <script>
      import { DateTime } from "luxon";

      /**
       * Transform the absolute ISO timestamps on blog posts into relative timestamps.
       * This executes client-side so that it is always current to the visitors time.
       */
      (function toRelativeTime() {
        const timeElements = document.querySelectorAll("time[datetime][to-rel]");

        for (const time of timeElements) {
          const datetime = time.getAttribute("datetime");
          if (datetime) {
            const dt = DateTime.fromISO(datetime);
            const relative = dt.toRelative({ style: "narrow" });
            time.textContent = relative;
          }
        }
      })();
    </script>
  </body>
</html>
