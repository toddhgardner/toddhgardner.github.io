---
import { Picture } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";
import YouTubeVideo from "~/components/YouTubeVideo.astro";
import Layout from "~/layouts/Layout.astro";

import { AUTHOR_DESCRIPTION, AUTHOR_IMAGE, AUTHOR_NAME } from "~/consts";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const url = new URL(Astro.url.pathname.replace(".html", ""), Astro.url.origin);
const post = Astro.props;
const { Content } = await post.render();
---

<Layout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image}>

  <Fragment slot="og">
    <meta property="og:type" content="article">
    <meta property="og:article:published_time" content={post.data.publishedOn.toISOString()}>
    {post.data.updatedOn ? (<meta property="og:article:modified_time" content={post.data.updatedOn.toISOString()}>) : ""}
    <meta property="og:article:author" content={new URL('about', Astro.url.origin)}>
    <meta property="og:article:section" content="Software Engineering">
    {(post.data.tags ?? []).map((tag) => (
      <meta property="og:article:tag" content={tag}>
    ))}
  </Fragment>

  <Fragment slot="structured-data">
    <script is:inline type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org/",
      "@type": "BlogPosting",
      "@id": `${url}#BlogPosting`,
      "mainEntityOfPage": url,
      "url": url,
      "headline": post.data.title,
      "name": post.data.title,
      "description": post.data.description,
      "datePublished": post.data.publishedOn.toISOString(),
      "dateModified": post.data.updatedOn ? post.data.updatedOn.toISOString() : undefined,
      "author": {
        "@type": "Person",
        "@id": "https://www.toddhgardner.com/#Person",
        "name": AUTHOR_NAME,
        "url": "https://www.toddhgardner.com/",
        "image": AUTHOR_IMAGE.src
      },
      "image": post.data.image ? {
        "@type": "ImageObject",
        "@id": `${post.data.image.src}#Image`,
        "url": post.data.image.src,
        "height": `${post.data.image.height}`,
        "width": `${post.data.image.width}`
      } : undefined,
      "isPartOf": {
        "@type" : "Blog",
        "@id": "https://www.toddhgardner.com/blog#Blog",
        "name": AUTHOR_NAME,
        "publisher": {
          "@type": "Person",
          "@id": "https://www.toddhgardner.com/#Person",
          "name": AUTHOR_NAME
        }
      },
      "keywords": post.data.tags
    })} />
    <script is:inline type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "BreadcrumbList",
      "itemListElement": [{
        "@type": "ListItem",
        "position": 1,
        "name": AUTHOR_NAME,
        "item": "https://www.toddhgardner.com/"
      },{
        "@type": "ListItem",
        "position": 2,
        "name": "Blog",
        "item": "https://www.toddhgardner.com/blog"
      },{
        "@type": "ListItem",
        "position": 3,
        "name": post.data.title
      }]
    })} />
  </Fragment>

  <style>
    article {
      header {
        picture img {
          border-radius: var(--pico-border-radius);
          box-shadow: var(--pico-box-shadow);
        }
      }
      footer {
        .about {
          padding: 16px 0;
          display: flex;
          gap: 32px;
          picture {
            flex: 0 0 120px;
            img {
              border-radius: 100%;
            }
          }
          p {
            font-size: 0.9em;
          }
        }
      }
    }
  </style>

  <article class="max-text-width">
    <header class="flex-column flex-gap-24">
      {post.data.video && (
        <YouTubeVideo videoId={post.data.video.id} videoTitle={post.data.title} />
      )}
      {!post.data.video && post.data.image && (
        <Picture
          src={post.data.image}
          alt={post.data.title}
          formats={ ["webp"] }
          loading="eager"
        />
      )}
      <h1>{post.data.title}</h1>
      <div>
        <time datetime={post.data.publishedOn.toISOString()} to-rel
            data-tooltip={post.data.publishedOn.toLocaleString()}>
          {post.data.publishedOn.toLocaleDateString()}
        </time>
        â€¢ <a href={new URL("about", Astro.url.origin)} class="unlink" title={AUTHOR_NAME}>{AUTHOR_NAME}</a>
      </div>
    </header>
    <Content />
    <footer>
      <section class="about grid">
        <Picture src={AUTHOR_IMAGE} formats={["webp"]}
          alt={AUTHOR_NAME}
          width={ 120 } />
        <div>
          <h3>About the author</h3>
          <p>{AUTHOR_DESCRIPTION}</p>
          <p><a href={new URL("about", Astro.url.origin)} title={AUTHOR_NAME}>More about Todd &gt;&gt;</a></p>
        </div>

      </section>
    </footer>
  </article>
</Layout>
