---
import { Picture } from "astro:assets";
import Layout from "~/layouts/Layout.astro";
import {
  AUTHOR_NAME,
  AUTHOR_DESCRIPTION,
  AUTHOR_IMAGE,
  AUTHOR_TITLE,
  AUTHOR_LINKS
} from "~/consts";
import headerImage from "../images/javacriptaire.jpg";

const title = "About Todd H. Gardner";

---

<Layout
  title={title}
  description={AUTHOR_DESCRIPTION}>

  <Fragment slot="og">
    <meta property="og:type" content="profile">
    <meta property="og:profile:first_name" content="Todd H.">
    <meta property="og:profile:last_name" content="Gardner">
    <meta property="og:profile:username" content="toddhgardner">
  </Fragment>

  <Fragment slot="structured-data">
    <script is:inline type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "ProfilePage",
      "dateCreated": "2014-01-09T00:00:00Z",
      "dateModified": (new Date()).toISOString(),
      "mainEntity": {
        "@type": "Person",
        "@id": "https://www.toddhgardner.com/#Person",
        "name": AUTHOR_NAME,
        "alternateName": "toddhgardner",
        "identifier": "toddhgardner",
        "description": AUTHOR_TITLE,
        "image": new URL(AUTHOR_IMAGE.src, Astro.url.origin),
        "sameAs": AUTHOR_LINKS.map((link) => link.url)
      }
    })} />
  </Fragment>

  <style>
    article {
      header {
        picture img {
          border-radius: var(--pico-border-radius);
          box-shadow: var(--pico-box-shadow);
        }
      }
    }
  </style>
  <article class="max-text-width">
    <header class="flex-column flex-gap-16">
      <Picture
        src={headerImage}
        alt="Todd H. Gardner hosting 'Who Wants to be a JavaScriptAire?' at NDC Oslo"
        formats={["webp"]}
        loading="eager"
        widths={[900,1200]} />
      <h1>{title}</h1>
      <div class="secondary">{AUTHOR_TITLE}</div>
    </header>

    <div class="main">
      <p>
        And occasionally, I even finish them.
      </p>
      <p>
        Hey, I'm Todd. I've been building stuff on the web for over 20 years, and I'm still not tired of it. These days, I'm the CEO of three companies I co-founded:
        TrackJS (because JavaScript errors are inevitable),
        Request Metrics (because slow websites make me sad), and now
        CertKit (because SSL certificates shouldn't require a PhD to manage).
      </p>
      <p>
        Before I caught the startup bug, I spent years in the enterprise trenches at places like Thomson Reuters and Toro, where I learned that most "enterprise solutions" are just regular solutions with more meetings and higher prices. I've been everything from a network admin (yes, I've crimped ethernet cables) to an enterprise architect (no, I can't explain what that means either).
      </p>
      <p>
        I have a Master's in Management of Technology, which is a fancy way of saying "I learned how to talk to both engineers and business people without making either group angry." I also teach courses on
        Frontend Masters about web performance and debugging, because apparently I enjoy explaining why your JavaScript is broken.
      </p>
      <p>
        When I'm not staring at code, you might find me plotting some elaborate internet joke, obsessing over PowerPoint, or building Home Assistant automations.
      </p>
      <p>
        I occasionally write about building products, software engineering, and things that make me want to flip tables. I also speak at conferences, mostly because they haven't figured out I'm just making it up as I go.
      </p>
      <p>
        PS: That photo up top? That's me hosting "Who Wants to be a JavaScriptaire?" at NDC Oslo. Yes, it went exactly as well as you'd expect a JavaScript game show to go.
      </p>
    </div>

    <footer>
      <h2>Find me online</h2>
      <p>
        Sometimes I write on other platforms and social networks. Connect with me there.
      </p>
      <ul class="flex flex-wrap justify-center unlist">
        {AUTHOR_LINKS.map((link) => (
          <li>
            <a href={link.url} rel="noopener" target="_blank">{link.name}</a>&nbsp;&nbsp;â€¢&nbsp;&nbsp;
          </li>
        ))}
      </ul>
    </footer>
  </article>
</Layout>
